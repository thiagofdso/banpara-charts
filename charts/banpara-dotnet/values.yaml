image:
  ## Name of the image you want to build/deploy
  ## Defaults to the release name
  name: devops-banpara/idevops
  ## Tag that you want to build/deploy
  tag: 0.7.0

## Application/Deployment-specific values (For configuring Deployment, Service, Route, ConfigMap, etc)
deploy:
  ## Choose deployment or deploymentconfig
  
  
  ## Number of pod replicas to deploy
  replicas: 1

  ## Freeform resources. More information: https://kubernetes.io/docs/concepts/configuration/manage-resources-containers/
  resources:
    limits:
      cpu: 200m
      memory: 512Mi
    requests:
      cpu: 200m
      memory: 512Mi

  ## Type of service to create. More information: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services-service-types
  serviceType: ClusterIP

  ## Freeform service ports. More information: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service
  ports:
    - name: http
      port: 8080
      targetPort: 8080
      protocol: TCP

  ## For creating a Route, allowing your application to be accessed from outside the OCP cluster
  route:
    enabled: true
    targetPort: http
    ## More information: https://docs.openshift.com/container-platform/4.6/networking/routes/secured-routes.html
    tls:
      enabled: false
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
      ## IMPORTANT: Do not check 'key' into git!
      key:
      caCertificate:
      certificate:
      destinationCACertificate:

  ## Freeform Startup Probe. More information: https://docs.openshift.com/container-platform/4.6/applications/application-health.html#application-health-about_application-health
  #startupProbe:
  #  tcpSocket:
  #    port: http
  ## If you don't want a startupProbe, override like this in your values file
  startupProbe:
    failureThreshold: 10
    httpGet:
      path: /config
      port: 8080
      scheme: HTTP
    periodSeconds: 10
    successThreshold: 1
    timeoutSeconds: 10
  ## Freeform Liveness Probe. More information: https://docs.openshift.com/container-platform/4.6/applications/application-health.html#application-health-about_application-health
  #livenessProbe:
  #  tcpSocket:
  #    port: http
  ## If you don't want a livenessProbe, override like this in your values file
  livenessProbe: 
    httpGet:
        path: /config
        port: 8080
        scheme: HTTP
    timeoutSeconds: 3
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
  ## Freeform Readiness Probe. More information: https://docs.openshift.com/container-platform/4.6/applications/application-health.html#application-health-about_application-health
  #readinessProbe:
  #  httpGet:
  #    path: /health
  #    port: http
  ## If you don't want a readinessProbe, override like this in your values file
  readinessProbe: 
    httpGet:
        path: /config
        port: 8080
        scheme: HTTP
    timeoutSeconds: 3
    periodSeconds: 10
    successThreshold: 1
    failureThreshold: 3
    
  ## Freeform env. More information: https://kubernetes.io/docs/tasks/inject-data-application/define-environment-variable-container/
  env:
  #  - name: VAR_NAME
  #    value: var-value

  ## Freeform envFrom. More information: https://kubernetes.io/docs/tasks/configure-pod-container/configure-pod-configmap/#configure-all-key-value-pairs-in-a-configmap-as-container-environment-variables
  envFrom:
  #  - configMapRef:
  #      name: special-config

  ## Application properties file for configuring the app
  applicationProperties:
    ## Determines if application properties should be created in a configmap and mounted to the application container
    enabled: true
    ## Use Secret or ConfigMap
    type: Secret
    ## Location to mount the properties file
    mountPath: /app/appsettings.json
    subPath: appsettings.json
    ## Application properties file contents
    properties: |-
      {
          "AllowedHosts": "*",
          "Logging": {
            "LogLevel": {
              "Default": "Debug",
              "Microsoft.AspNetCore": "Warning"
            }
          }
      }

  ## Freeform volume mounts. More information: https://kubernetes.io/docs/concepts/storage/volumes/
  volumeMounts:
    #- name: application-properties
     # mountPath: /app/appsettings.json
      #subPath: appsettings.json

  ## Freeform volumes. More information: https://kubernetes.io/docs/concepts/storage/volumes/
  volumes:
 #   - name: appsettings
 #     configMap:
 #       name: idevops

  ## Freeform init containers: More information: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/
  initContainers:
  #  - name: my-init-container
  #    command: ["echo", "hello"]
  #    image: registry.redhat.io/ubi8/ubi-minimal

  ## Freeform containers: More information: https://kubernetes.io/docs/concepts/workloads/pods/#pod-templates
  extraContainers:
  #  - name: my-extra-container
  #    command: ["sleep", "infinity"]
  #    image: registry.redhat.io/ubi8/ubi-minimal

global:
  ## Override the release name
  nameOverride: idevops
