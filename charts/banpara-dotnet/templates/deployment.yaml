{{- if not (.Values.deploy.resources)}}
{{- fail "Invalid deploy.resources value" }}
{{- end }}
{{- if not (.Values.deploy.startupProbe)}}
{{- fail "Invalid deploy.startupProbe value" }}
{{- end }}
{{- if not (.Values.deploy.livenessProbe)}}
{{- fail "Invalid deploy.livenessProbe value" }}
{{- end }}
{{- if not (.Values.deploy.readinessProbe)}}
{{- fail "Invalid deploy.readinessProbe value" }}
{{- end }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "dotnet.name" . }}
  labels:
    {{- include "dotnet.labels" . | nindent 4 }}
spec:
  replicas: {{ required "replicas is required" .Values.deploy.replicas }}
  selector:
    matchLabels:
      {{- include "dotnet.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        {{- include "dotnet.labels" . | nindent 8 }}
    spec:
{{- if .Values.deploy.initContainers }}
      initContainers:
        {{- tpl (toYaml .Values.deploy.initContainers) . | nindent 8 }}
{{- end }}
      containers:
        - name: web
          image:  'nexus.banpara.com:9001/{{required "image.name is required" .Values.image.name }}:{required "image.tag is required" .Values.image.tag}'
          ports:
{{- range .Values.deploy.ports }}
            - name: {{ .name }}
              containerPort: {{ .targetPort }}
              protocol: {{ .protocol }}
{{- end }}
          resources:
            {{- toYaml .Values.deploy.resources | nindent 12 }}
          startupProbe:
            {{- tpl (toYaml .Values.deploy.startupProbe) . | nindent 12 }}
          livenessProbe:
            {{- tpl (toYaml .Values.deploy.livenessProbe) . | nindent 12 }}
          readinessProbe:
            {{- tpl (toYaml .Values.deploy.readinessProbe) . | nindent 12 }}
{{- if .Values.deploy.env }}
          env:
            {{- tpl (toYaml .Values.deploy.env) . | nindent 12 }}
{{- end }}
{{- if .Values.deploy.envFrom }}
          envFrom:
            {{- tpl (toYaml .Values.deploy.envFrom) . | nindent 12 }}
{{- end }}
          volumeMounts:
{{- if .Values.deploy.applicationProperties.enabled }}
            - name: application-properties
              mountPath: {{ .Values.deploy.applicationProperties.mountPath }}
              subPath: {{ .Values.deploy.applicationProperties.subPath }}
{{- end }}
{{- if .Values.deploy.volumeMounts }}
            {{- tpl (toYaml .Values.deploy.volumeMounts) . | nindent 12 }}
{{- end }}
{{- if .Values.deploy.extraContainers }}
        {{- tpl (toYaml .Values.deploy.extraContainers) . | nindent 8 }}
{{- end }}
      volumes:
{{- if and .Values.deploy.applicationProperties.enabled (eq .Values.deploy.applicationProperties.type "ConfigMap") }}
        - name: application-properties
          configMap:
            name: {{ include "dotnet.name" . }}
{{- end }}
{{- if and .Values.deploy.applicationProperties.enabled (eq .Values.deploy.applicationProperties.type "Secret") }}
        - name: application-properties
          secret:
            secretName: {{ include "dotnet.name" . }}
{{- end }}
{{- if .Values.deploy.volumes }}
        {{- tpl (toYaml .Values.deploy.volumes) . | nindent 8 }}
{{- end }}